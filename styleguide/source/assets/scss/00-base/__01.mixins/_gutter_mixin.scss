$gutter-mobile: 21px;
$gutter: 28px;

// Some pre-made styles. Pass to gutter() mixin - see _mixins.scss.
// Feel free to add a new style following the naming conventions.
$margin-top-full: margin, top, $gutter, $gutter-mobile;
$margin-top-half: margin, top, calc($gutter / 2), calc($gutter-mobile / 2);
$margin-right-full: margin, right, $gutter, $gutter-mobile;
$margin-right-half: margin, right, calc($gutter / 2), calc($gutter-mobile / 2);
$margin-left-full: margin, left, $gutter, $gutter-mobile;
$margin-left-half: margin, left, calc($gutter / 2), calc($gutter-mobile / 2);
$margin-bottom-full: margin, bottom, $gutter, $gutter-mobile;
$margin-bottom-half: margin, bottom, calc($gutter / 2), calc($gutter-mobile / 2);
$margin-top-half-negative: margin, top, calc(-28 / 2), calc(-21 / 2);
$margin-top-full-negative: margin, top, -$gutter, -$gutter-mobile;
$margin-left-full-negative: margin, left, -$gutter, -$gutter-mobile;

// list margins
$margin-left-list: margin, left, calc($gutter * 1.786), calc($gutter-mobile * 1.6);
$margin-left-nested-list: margin, left, calc($gutter /1.3), calc($gutter-mobile * 1.1);

$padding-top-quarter: padding, top, calc($gutter / 4), calc($gutter-mobile / 4);
$padding-top-full: padding, top, $gutter, $gutter-mobile;
$padding-top-double: padding, top, calc($gutter * 2), calc($gutter-mobile * 2);
$padding-top-half: padding, top, calc($gutter / 2), calc($gutter-mobile / 2);
$padding-right-full: padding, right, $gutter,  $gutter-mobile;
$padding-right-double: padding, right, calc($gutter * 2),  calc($gutter-mobile * 2);
$padding-right-half: padding, right, calc($gutter / 2),  calc($gutter-mobile / 2);
$padding-right-quarter: padding, right, calc($gutter / 4),  calc($gutter-mobile / 4);
$padding-bottom-full: padding, bottom, $gutter, $gutter-mobile;
$padding-bottom-half: padding, bottom, calc($gutter / 2), calc($gutter-mobile / 2);
$padding-bottom-quarter: padding, bottom, calc($gutter / 4), calc($gutter-mobile / 4);
$padding-left-full: padding, left, $gutter, $gutter-mobile;
$padding-left-half: padding, left, calc($gutter / 2),  calc($gutter-mobile / 2);
$padding-left-quarter: padding, left, calc($gutter / 4),  calc($gutter-mobile / 4);
$padding-left-double: padding, left, calc($gutter * 2),  calc($gutter-mobile * 2);

$margin-all-half: margin, calc($gutter / 2), calc($gutter-mobile / 2);
$margin-all-full: margin, $gutter, $gutter-mobile;
$padding-all-half: padding, calc($gutter / 2), calc($gutter-mobile / 2);
$padding-all-full: padding, $gutter, $gutter-mobile;


// Provide a gutter mixin to make responsive gutter variables available.
// Usage: @include gutter($padding-left-full...);
// The "..." allows SCSS to pass arguments as a list.
// Will output one direction, e.g. "padding-left: 20px;".
// See _variables.scss for a list of style vars that can be passed.
@mixin gutter($type, $direction, $width: $gutter, $width-mobile: $gutter-mobile) {
  #{$type}-#{$direction}: #{$width-mobile};
  @media (min-width:$bp-med) {
    #{$type}-#{$direction}: #{$width};
  }
}

// Useful mixin for all margin or padding values to be the same.
@mixin gutter-all($type, $width: $gutter, $width-mobile: $gutter-mobile) {
  #{$type}: #{$width-mobile};
  @include breakpoint($bp-med) {
    #{$type}: #{$width};
  }
}

// For patterns that are flex-direction: column, ensure
// the appropriate top margins between them. The other half
// of the gutter should be provided by the top margin of
// the first child element.
@mixin child-top-gutters($height) {
  > * {
    margin-top: calc($height / 2);

  @include breakpoint($bp-med) {
      margin-top: $height;
    }
  }
}
